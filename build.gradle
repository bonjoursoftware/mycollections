plugins {
    id 'groovy'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'application'
}

version '1.4.0'
group 'com.bonjoursoftware'

repositories {
    mavenCentral()
}

configurations {
    developmentOnly
}

dependencies {
    compileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")
    compileOnly 'io.micronaut:micronaut-inject-groovy'
    implementation 'org.mongodb:mongo-java-driver:3.12.9'
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation 'io.micronaut:micronaut-runtime-groovy:1.1.3'
    implementation 'io.micronaut:micronaut-validation'
    implementation 'javax.annotation:javax.annotation-api'
    implementation 'io.micronaut:micronaut-http-server-netty'
    implementation 'io.micronaut:micronaut-http-client'
    implementation 'io.micronaut.security:micronaut-security:2.5.0'
    implementation 'com.sendgrid:sendgrid-java:4.7.2'
    implementation 'org.springframework.security:spring-security-crypto:5.5.1'
    runtimeOnly 'ch.qos.logback:logback-classic:1.2.4'
    testCompileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation('org.spockframework:spock-core') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    testImplementation 'io.micronaut:micronaut-inject-groovy'
    testImplementation 'io.micronaut.test:micronaut-test-spock'
    testImplementation 'io.micronaut.test:micronaut-test-junit5'
    testImplementation 'net.bytebuddy:byte-buddy:1.11.8'
}

test.classpath += configurations.developmentOnly

mainClassName = 'com.bonjoursoftware.mycollections.Application'
tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
}

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}

test {
    useJUnitPlatform()
}
