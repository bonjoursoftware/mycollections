plugins {
    id 'groovy'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'application'
}

version '0.0.1'
group 'com.bonjoursoftware'

repositories {
    mavenCentral()
    maven { url 'https://jcenter.bintray.com' }
}

configurations {
    developmentOnly
}

dependencies {
    compileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")
    compileOnly 'io.micronaut:micronaut-inject-groovy'
    compileOnly 'jakarta.persistence:jakarta.persistence-api:2.2.2'
    compile 'io.micronaut.data:micronaut-data-jdbc:1.0.0'
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation 'io.micronaut:micronaut-runtime-groovy'
    implementation 'io.micronaut:micronaut-validation'
    implementation 'javax.annotation:javax.annotation-api'
    implementation 'io.micronaut:micronaut-http-server-netty'
    implementation 'io.micronaut:micronaut-http-client'
    implementation 'io.micronaut.configuration:micronaut-security-oauth2'
    implementation 'io.micronaut:micronaut-security-jwt'
    implementation 'io.micronaut:micronaut-views-thymeleaf'
    runtime 'org.thymeleaf:thymeleaf:3.0.11.RELEASE'
    runtime 'io.micronaut.configuration:micronaut-jdbc-hikari'
    runtime 'org.postgresql:postgresql:42.2.10'
    runtimeOnly 'ch.qos.logback:logback-classic:1.2.3'
    compileOnly 'io.micronaut.data:micronaut-data-processor:1.0.0'
    testCompileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation('org.spockframework:spock-core') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    testImplementation 'io.micronaut:micronaut-inject-groovy'
    testImplementation 'io.micronaut.test:micronaut-test-spock'
    testImplementation 'io.micronaut.test:micronaut-test-junit5'
    testImplementation 'net.bytebuddy:byte-buddy:1.10.8'
}

test.classpath += configurations.developmentOnly

mainClassName = 'com.bonjoursoftware.mycollections.Application'
tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
}

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}
